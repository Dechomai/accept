files:
  "/etc/nginx/nginx.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      user  nginx;
      worker_processes  auto;
      error_log  /var/log/nginx/error.log;
      pid        /var/run/nginx.pid;

      events {
          worker_connections  1024;
      }

      http {
          client_max_body_size 21M;
          port_in_redirect off;
          include       /etc/nginx/mime.types;
          default_type  application/octet-stream;
          log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';

          access_log  /var/log/nginx/access.log  main;
          sendfile        on;
          keepalive_timeout  65;
      # Elastic Beanstalk Modification(EB_INCLUDE)
          log_format healthd '$msec"$uri"'
                             '$status"$request_time"$upstream_response_time"'
                             '$http_x_forwarded_for';

      #include /etc/nginx/conf.d/*.conf;
      include conf.d/elasticbeanstalk/*.conf;
      # End Modification
      }

  "/etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf":
    mode: "00644"
    owner: root
    group: root
    content: |
      upstream nodejs {
          server 127.0.0.1:8081;
          keepalive 256;
      }
      server {
          listen 8080;

          if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
              set $year $1;
              set $month $2;
              set $day $3;
              set $hour $4;
          }

          access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
          access_log  /var/log/nginx/access.log  main;

          location / {
              proxy_pass  http://nodejs;
              proxy_set_header   Connection "";
              proxy_http_version 1.1;
              proxy_set_header        Host            $host;
              proxy_set_header        X-Real-IP       $remote_addr;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          }

          if ($http_x_forwarded_proto = 'http') {
              return 301 https://$host$request_uri;
          }

      gzip on;
      gzip_comp_level 4;
      gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
      }
